#! /bin/sh

if qmake-qt4 --version >/dev/null 2>&1
then
    BINQMAKE=qmake-qt4
elif qmake4 --version >/dev/null 2>&1
then
    BINQMAKE=qmake4
elif qmake --version >/dev/null 2>&1
then
    BINQMAKE=qmake
elif $HOME/Qt/5.3/clang_64/bin/qmake --version >/dev/null 2>&1
then
	BINQMAKE=$HOME/Qt/5.3/clang_64/bin/qmake
elif $HOME/Qt/5.4/clang_64/bin/qmake --version >/dev/null 2>&1
then
	BINQMAKE=$HOME/Qt/5.3/clang_64/bin/qmake
else
    echo qmake not found
	exit
fi

if cmake >/dev/null 2>&1
    echo cmake not found
	exit
fi

cd openjpeg
cmake -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=usr .
make
make install
cd ..

# freetype
if [ ! -d freetype ] ; then
	wget https://downloads.sf.net/project/freetype/freetype2/2.5.3/freetype-2.5.3.tar.bz2
	tar jxf freetype-2.5.3.tar.bz2 
	mv freetype-2.5.3 freetype
fi
cd freetype
./configure --prefix="`pwd`/usr" --without-harfbuzz
make
make install
cd ..

# decklink
if [ ! -d decklinksdk ] ; then
	wget http://software.blackmagicdesign.com/SDK/Blackmagic_DeckLink_SDK_10.1.4.zip
	unzip Blackmagic_DeckLink_SDK_10.1.4.zip 
	mv Blackmagic_DeckLink_SDK_10.1.4 decklinksdk
fi

cd ffmpeg
chmod u+x configure
chmod u+x version.sh
if yasm --version >/dev/null 2>&1
then
	# need to conditionally use ../decklink/{Mac|Win|Linux}/include for build
    ./configure --enable-gpl --enable-version3 --disable-shared --enable-static --disable-swscale-alpha --disable-doc --disable-ffplay --disable-ffprobe --disable-ffserver --disable-debug --enable-libopenjpeg --disable-decoder=jpeg2000 --extra-cflags="-I../openjpeg/usr/include" --extra-ldflags="-L../openjpeg/usr/lib" --enable-libfreetype --extra-cflags="-I../freetype/usr/include" --extra-ldflags="-L../freetype/usr/lib" --enable-decklink --extra-cflags="-I../decklink/Mac/include"
else
    cd ../yasm/
    ./configure --prefix=`pwd`/usr
    make
    make install

    cd ../ffmpeg
	# need to conditionally use ../decklink/{Mac|Win|Linux}/include for build
    ./configure --enable-gpl --enable-version3 --disable-shared --enable-static --disable-swscale-alpha --disable-doc --disable-ffplay --disable-ffprobe --disable-ffserver --disable-debug --enable-libopenjpeg --disable-decoder=jpeg2000 --extra-cflags="-I../openjpeg/usr/include" --extra-ldflags="-L../openjpeg/usr/lib" --enable-libfreetype --extra-cflags="-I../freetype/usr/include" --extra-ldflags="-L../freetype/usr/lib" --enable-decklink --extra-cflags="-I../decklink/Mac/include" --yasmexe=../yasm/usr/bin/yasm
fi

# workaround to build decklink ffmpeg files with cpp on Mac, needs ../decklink/Mac/include conditionally adjusted if needed on Linux or Win
g++ -D__STDC_CONSTANT_MACROS -I. -I./ -D_ISOC99_SOURCE -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -DPIC -DZLIB_CONST -DHAVE_AV_CONFIG_H -I../decklink/Mac/include -mdynamic-no-pic -fomit-frame-pointer -fPIC -pthread -D_GNU_SOURCE=1 -D_THREAD_SAFE -I/usr/local/include/SDL -g -Wdeclaration-after-statement -Wall -Wdisabled-optimization -Wpointer-arith -Wredundant-decls -Wwrite-strings -Wtype-limits -Wundef -Wmissing-prototypes -Wno-pointer-to-int-cast -Wstrict-prototypes -Wempty-body -Wno-parentheses -Wno-switch -Wno-format-zero-length -Wno-pointer-sign -O3 -fno-math-errno -fno-signed-zeros -Qunused-arguments -Werror=implicit-function-declaration -Werror=missing-prototypes -Werror=return-type   -c -o libavdevice/decklink_common.o libavdevice/decklink_common.cpp
g++ -D__STDC_CONSTANT_MACROS -I. -I./ -D_ISOC99_SOURCE -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -DPIC -DZLIB_CONST -DHAVE_AV_CONFIG_H -I../decklink/Mac/include -mdynamic-no-pic -fomit-frame-pointer -fPIC -pthread -D_GNU_SOURCE=1 -D_THREAD_SAFE -I/usr/local/include/SDL -g -Wdeclaration-after-statement -Wall -Wdisabled-optimization -Wpointer-arith -Wredundant-decls -Wwrite-strings -Wtype-limits -Wundef -Wmissing-prototypes -Wno-pointer-to-int-cast -Wstrict-prototypes -Wempty-body -Wno-parentheses -Wno-switch -Wno-format-zero-length -Wno-pointer-sign -O3 -fno-math-errno -fno-signed-zeros -Qunused-arguments -Werror=implicit-function-declaration -Werror=missing-prototypes -Werror=return-type   -c -o libavdevice/decklink_dec.o libavdevice/decklink_dec.cpp
g++ -D__STDC_CONSTANT_MACROS -I. -I./ -D_ISOC99_SOURCE -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -DPIC -DZLIB_CONST -DHAVE_AV_CONFIG_H -I../decklink/Mac/include -mdynamic-no-pic -fomit-frame-pointer -fPIC -pthread -D_GNU_SOURCE=1 -D_THREAD_SAFE -I/usr/local/include/SDL -g -Wdeclaration-after-statement -Wall -Wdisabled-optimization -Wpointer-arith -Wredundant-decls -Wwrite-strings -Wtype-limits -Wundef -Wmissing-prototypes -Wno-pointer-to-int-cast -Wstrict-prototypes -Wempty-body -Wno-parentheses -Wno-switch -Wno-format-zero-length -Wno-pointer-sign -O3 -fno-math-errno -fno-signed-zeros -Qunused-arguments -Werror=implicit-function-declaration -Werror=missing-prototypes -Werror=return-type   -c -o libavdevice/decklink_enc.o libavdevice/decklink_enc.cpp

make
cd ..

cd qwt
$BINQMAKE
make
cd ..

cd qctools/Project/QtCreator
if sw_vers >/dev/null 2>&1
then
	#Qt 5.2 can not well detect the platform version for 10.9 then FFmpeg static link fails
	MAJOR_MAC_VERSION=$(sw_vers -productVersion | awk -F '.' '{print $1 "." $2}')
	$BINQMAKE QMAKE_MAC_SDK=macosx$MAJOR_MAC_VERSION
else
	$BINQMAKE
fi
make
cd ../../..

echo QCTools binary is in qctools/Project/QtCreator
